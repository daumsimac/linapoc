{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "javaPackageName": {
            "type": "string",
            "defaultValue": "openjdk-8-jdk",
            "allowedValues": [
                "openjdk-8-jdk",
                "openjdk-11-jdk",
                "openjdk-12-jdk",
                "openjdk-13-jdk"
            ],
            "metadata": {
                "description": "java Package Name"
            }
        },
        "tomcatPackageName": {
            "type": "string",
            "defaultValue": "tomcat9",
            "allowedValues": [
                "tomcat7",
                "tomcat8",
                "tomcat9"
            ],
            "metadata": {
                "description": "tomcat Package Name"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "The size of the virtual machines used when provisioning"
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "allowedValues": [
                "18.04-LTS",
                "16.04-LTS",
                "14.04.5-LTS"
            ],
            "metadata": {
                "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "[deployment().properties.templatelink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "functions": [
        {
            "namespace": "howspace",
            "members": {
                "vmName": {
                    "parameters": [
                        {
                            "name": "namePrefix",
                            "type": "string"
                        },
                        {
                            "name": "index",
                            "type": "int"
                        }
                    ],
                    "output": {
                        "value": "[concat(parameters('namePrefix'), parameters('index'))]",
                        "type": "string"
                    }
                }
            }
        }
    ],
    "variables": {
        "imagePublisher": "Canonical",
        "imageOffer": "UbuntuServer",
        "nicNameSuffix": "VMNic",
        "nsgNameSuffix": "NSG",
        "vmPrefix": "CKWAS-0",
        "addressPrefix": "10.0.0.0/16",
        "subnetNameSuffix": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "publicIPAddressNameSuffix": "PublicIP",
        "virtualNetworkNameSuffix": "VNET",
        "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "networkSecurityGroupName": "default-NSG"
    },
    "resources": [
        {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('publicIPAddressNameSuffix')))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-22",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('virtualNetworkNameSuffix')))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('subnetNameSuffix')))]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('subnetNameSuffix')))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('publicIPAddressNameSuffix'))))]",
        "[resourceId('Microsoft.Network/virtualNetworks', concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('virtualNetworkNameSuffix'))))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('nsgNameSuffix'))))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('nsgNameSuffix'))))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-06-01",
      "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('nsgNameSuffix')))]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Web",
            "properties": {
              "description": "Allow Web",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 112,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-07-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex()))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('nicNameSuffix'))))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex()))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(concat(howspace.vmName(variables('vmPrefix'), copyIndex())),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(howspace.vmName(variables('vmPrefix'), copyIndex(), variables('nicNameSuffix'))))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(howspace.vmName(variables('vmPrefix'), copyIndex()),'/installscript')]",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', concat(howspace.vmName(variables('vmPrefix'), copyIndex())))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(parameters('_artifactsLocation'), concat('java-tomcat-install.sh', parameters('_artifactsLocationSasToken')))]"
          ],
          "commandToExecute": "[concat('sh java-tomcat-install.sh',' ',parameters('javaPackageName'),' ',parameters('tomcatPackageName'))]"
        }
      }
    }
    ]
}
